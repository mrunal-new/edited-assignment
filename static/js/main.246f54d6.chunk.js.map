{"version":3,"sources":["components/register/index.js","components/users/index.js","App.js","reportWebVitals.js","index.js"],"names":["schema","yup","shape","firstName","min","max","required","lastName","email","phoneNumber","password","matches","confirmPassword","oneOf","gender","Register","useState","undefined","formData","setFormData","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","console","log","style","marginTop","Form","onSubmit","data","Group","controlId","Label","Control","type","color","message","id","value","for","Button","variant","Object","keys","map","textAlign","display","Users","users","setUsers","handleForm","e","target","name","Table","hasOwnProperty","defaultValue","placeholder","onChange","phone","qualification","onClick","prevState","filter","val","res2","res","edit","getOwnPropertyNames","length","Math","random","App","conditionalRender","setConditionalRender","Container","marginLeft","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAMMA,EAASC,MAAaC,MAAM,CAChCC,UAAWF,MAAaG,IAAI,GAAGC,IAAI,IAAIC,WACvCC,SAAUN,MAAaG,IAAI,GAAGC,IAAI,IAAIC,WACtCE,MAAOP,MAAaO,MAAM,iBAAiBF,WAC3CG,YAAaR,MAAaG,IAAI,IAC9BM,SAAUT,MAAaK,WAAWK,QAChC,kEACE,uGAEJC,gBAAiBX,MACbY,MAAM,CAACZ,IAAQ,YAAa,MAAO,wBACvCa,OAAQb,MAAaK,aAgFRS,EA5EE,WAAO,IAAD,YAErB,EAAgCC,wBAASC,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,EAAyDC,YAAQ,CAC/DC,SAAUC,YAAYtB,KADhBuB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAA0BC,EAA5C,EAAgCC,UAAYD,OAM5C,OADAE,QAAQC,IAAIH,GAEV,sBAAKI,MAAO,CAAEC,UAAW,QAAzB,UACE,0CAEA,eAACC,EAAA,EAAD,CAAMC,SAAUR,GAPH,SAAAS,GAAUN,QAAQC,IAAIK,GAAOd,EAAYc,MAOtD,UACE,eAACF,EAAA,EAAKG,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAACJ,EAAA,EAAKK,MAAN,yBACA,cAACL,EAAA,EAAKM,QAAN,aAAcC,KAAK,QAAWf,EAAS,eACvC,mBAAGM,MAAO,CAAEU,MAAO,OAAnB,mBAA6Bd,EAAOtB,iBAApC,aAA6B,EAAkBqC,aAEjD,eAACT,EAAA,EAAKG,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAACJ,EAAA,EAAKK,MAAN,wBACA,cAACL,EAAA,EAAKM,QAAN,aAAcC,KAAK,QAAWf,EAAS,cACvC,mBAAGM,MAAO,CAAEU,MAAO,OAAnB,mBAA6Bd,EAAOlB,gBAApC,aAA6B,EAAiBiC,aAEhD,eAACT,EAAA,EAAKG,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAACJ,EAAA,EAAKK,MAAN,oBACA,cAACL,EAAA,EAAKM,QAAN,aAAcC,KAAK,SAAYf,EAAS,WACxC,mBAAGM,MAAO,CAAEU,MAAO,OAAnB,mBAA6Bd,EAAOjB,aAApC,aAA6B,EAAcgC,aAG7C,wCACA,+CAAOF,KAAK,QAAQG,GAAG,QAAYlB,EAAS,WAA5C,IAAuDmB,MAAM,UAC7D,uBAAOC,IAAI,OAAX,kBAA8B,uBAC9B,+CAAOL,KAAK,QAAQG,GAAG,UAAalB,EAAS,WAA7C,IAAwDmB,MAAM,YAC9D,uBAAOC,IAAI,SAAX,oBAAkC,uBAClC,+CAAOL,KAAK,QAAQG,GAAG,SAAYlB,EAAS,WAA5C,IAAuDmB,MAAM,WAC7D,uBAAOC,IAAI,QAAX,mBAEA,eAACZ,EAAA,EAAKG,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAACJ,EAAA,EAAKK,MAAN,2BACA,cAACL,EAAA,EAAKM,QAAN,aAAcC,KAAK,UAAaf,EAAS,iBACzC,mBAAGM,MAAO,CAAEU,MAAO,OAAnB,mBAA6Bd,EAAOhB,mBAApC,aAA6B,EAAoB+B,aAGnD,eAACT,EAAA,EAAKG,MAAN,CAAYC,UAAU,oBAAtB,UACE,cAACJ,EAAA,EAAKK,MAAN,uBACA,cAACL,EAAA,EAAKM,QAAN,aAAcC,KAAK,YAAef,EAAS,cAC3C,mBAAGM,MAAO,CAAEU,MAAO,OAAnB,mBAA6Bd,EAAOf,gBAApC,aAA6B,EAAiB8B,aAEhD,eAACT,EAAA,EAAKG,MAAN,CAAYC,UAAU,oBAAtB,UACE,cAACJ,EAAA,EAAKK,MAAN,+BACA,cAACL,EAAA,EAAKM,QAAN,aAAcC,KAAK,YAAef,EAAS,qBAC3C,mBAAGM,MAAO,CAAEU,MAAO,OAAnB,mBAA6Bd,EAAOb,uBAApC,aAA6B,EAAwB4B,aAGvD,cAACI,EAAA,EAAD,CAAQC,QAAQ,UAAUP,KAAK,SAA/B,uBAKF,qCACcrB,IAAZC,EAAyB,wCAAkB,UAC5BD,IAAbC,EAA0B4B,OAAOC,KAAK7B,GAAU8B,KAAI,SAACN,GAAD,OACpD,8BACE,sBAAKb,MAAO,CAAEoB,UAAW,UAAzB,UACE,oBAAGpB,MAAO,CAAEqB,QAAS,gBAArB,UAAwCR,EAAxC,SACA,uBAAMb,MAAO,CAAEqB,QAAS,gBAAxB,cAA4ChC,EAASwB,cAGtD,Y,wBCgCES,EAxHD,WACZ,MAA0BnC,wBAASC,GAAnC,mBAAOmC,EAAP,KAAcC,EAAd,KACA,EAAgCrC,wBAASC,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMmC,EAAa,SAACC,GAClB,IAAIb,EAAQa,EAAEC,OAAOd,MACjBe,EAAOF,EAAEC,OAAOC,KAEpBtC,EAAY,2BACPD,GADM,kBAERuC,EAAOf,MAKZf,QAAQC,IAAIwB,GAmDZ,OACE,sBAAKvB,MAAO,CAAEC,UAAW,QAAzB,UACE,uCACA,eAAC4B,EAAA,EAAD,WACE,gCACA,+BACE,sCACA,wCACA,8CACA,+CACA,4CAGF,uCAEGN,QAFH,IAEGA,OAFH,EAEGA,EAAOJ,KAAI,SAACN,GAAD,OACRA,EAAMiB,eAAe,QAWvB,+BACA,6BAAI,uBAAOrB,KAAK,OAAOsB,aAAclB,EAAMe,KAAMA,KAAK,OAAOI,YAAY,OAAOC,SAAUR,MAC1F,6BAAI,uBAAOhB,KAAK,OAAOsB,aAAclB,EAAM5B,OAAQ2C,KAAK,SAASI,YAAY,SAASC,SAAUR,MAChG,6BAAI,uBAAOhB,KAAK,SAASsB,aAAclB,EAAMqB,MAAON,KAAK,QAAQI,YAAY,QAAQC,SAAUR,MAC/F,6BAAI,uBAAOhB,KAAK,OAAOsB,aAAclB,EAAMsB,cAAeP,KAAK,gBAAgBI,YAAY,gBAAgBC,SAAUR,MACrH,6BAAI,uBAAOhB,KAAK,QAAQsB,aAAclB,EAAMlC,MAAOiD,KAAK,QAAQI,YAAY,QAAQC,SAAUR,MAC9F,6BAAI,cAACV,EAAA,EAAD,CAAQC,QAAQ,UAAUoB,QAAS,kBA9CvBxB,EA8C8CC,EAAMD,QA7C5EY,GAAS,SAACa,GACEA,EAAUC,QAAO,SAACC,GAC1B,OAAOA,EAAI3B,KAAOA,KADpB,IAGI4B,EAAOH,EAAUC,QAAO,SAACC,GAC3B,OAAOA,EAAI3B,KAAOA,KAGpB,MAAM,GAAN,mBAAY4B,GAAZ,gBAAuBnD,QATF,IAACuB,GA8CZ,uBAhBJ,+BACA,6BAAKC,EAAMe,OACX,6BAAKf,EAAM5B,SACX,6BAAK4B,EAAMqB,QACX,6BAAKrB,EAAMsB,gBACX,6BAAKtB,EAAMlC,QACX,6BAAI,cAACoC,EAAA,EAAD,CAAQC,QAAQ,SAASoB,QAAS,kBA3DrBhC,EA2D6CS,EAAMD,QA1D5EY,GAAS,SAACa,GAIR,OAHYA,EAAUC,QAAO,SAACzB,GAC5B,OAAOA,EAAMD,KAAOR,QAHA,IAACA,GA2Db,sBACJ,6BAAK,cAACW,EAAA,EAAD,CAAQC,QAAQ,QAAQoB,QAAS,kBAlDvBhC,EAkD6CS,EAAMD,QAjD1EY,GAAS,SAACa,GACR,IAAII,EAAMJ,EAAUC,QAAO,SAACC,GAC1B,OAAOA,EAAI3B,KAAOR,KAEhBoC,EAAOH,EAAUC,QAAO,SAACC,GAC3B,OAAOA,EAAI3B,KAAOR,KAGpB,MAAM,GAAN,mBAAYoC,GAAZ,4BAAuBC,EAAI,IAA3B,IAA+BC,MAAM,SATjB,IAACtC,GAkDV,4BAcT,kDACA,kCACE,+BACE,6BAAI,uBAAOK,KAAK,OAAOmB,KAAK,OAAOI,YAAY,OAAOC,SAAUR,MAChE,6BAAI,uBAAOhB,KAAK,OAAOmB,KAAK,SAASI,YAAY,SAASC,SAAUR,MACpE,6BAAI,uBAAOhB,KAAK,SAASmB,KAAK,QAAQI,YAAY,QAAQC,SAAUR,MACpE,6BAAI,uBAAOhB,KAAK,OAAOmB,KAAK,gBAAgBI,YAAY,gBAAgBC,SAAUR,MAClF,6BAAI,uBAAOhB,KAAK,QAAQmB,KAAK,QAAQI,YAAY,QAAQC,SAAUR,SAErE,cAACV,EAAA,EAAD,CAAQqB,QAhGI,gBACDhD,IAAbC,IAEiB,IADT4B,OAAO0B,oBAAoBtD,GAC7BuD,QAEJpB,OADYpC,IAAVmC,EACO,CAAC,2BAAIlC,GAAL,IAAeuB,GAAIiC,KAAKC,YAExB,GAAD,mBAAMvB,GAAN,aAAC,eAAgBlC,GAAjB,IAA2BuB,GAAIiC,KAAKC,gBAyF5C,2BCxFKC,MArBf,WACE,MAAoD5D,wBAASC,GAA7D,mBAAQ4D,EAAR,KAA2BC,EAA3B,KAEA,OACE,8BACE,eAACC,EAAA,EAAD,WACE,+CACA,uFACA,cAACnC,EAAA,EAAD,CAAQqB,QAAS,kBAAMa,EAAqB,aAA5C,mCAGA,cAAClC,EAAA,EAAD,CAAQqB,QAAS,kBAAMa,EAAqB,UAAUjD,MAAO,CAAEmD,WAAY,QAA3E,gCAIwB,aAAtBH,EAAoC,cAAC,EAAD,IAAsC,UAAtBA,EAAiC,cAAC,EAAD,IAAY,WCV5FI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.246f54d6.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from \"yup\";\n\nconst schema = yup.object().shape({\n  firstName: yup.string().min(3).max(12).required(),\n  lastName: yup.string().min(1).max(12).required(),\n  email: yup.string().email('Invalid email').required(),\n  phoneNumber: yup.number().min(10),\n  password: yup.string().required().matches(\n    /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{10,}$/,\n      \"Must Contain 10 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\n  ),\n  confirmPassword: yup.string()\n     .oneOf([yup.ref('password'), null], 'Passwords must match'),\n  gender: yup.string().required(),\n  // age: yup.number().positive().integer().required(),\n});\n\nconst Register = () => {\n\n  const [formData, setFormData] = useState(undefined);\n\n  const { register, handleSubmit, formState:{ errors } } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const onSubmit = data => { console.log(data); setFormData(data)}\n\n  console.log(errors);\n  return (\n    <div style={{ marginTop: '50px' }}>\n      <h1>Register</h1>\n\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>First Name</Form.Label>\n          <Form.Control type=\"text\" {...register(\"firstName\")}  />\n          <p style={{ color: 'red' }}>{errors.firstName?.message}</p>\n        </Form.Group>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Last Name</Form.Label>\n          <Form.Control type=\"text\" {...register(\"lastName\")} />\n          <p style={{ color: 'red' }}>{errors.lastName?.message}</p>\n        </Form.Group>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control type=\"email\" {...register(\"email\")}  />\n          <p style={{ color: 'red' }}>{errors.email?.message}</p>\n        </Form.Group>\n\n        <h3>Gender</h3>\n        <input type=\"radio\" id=\"male\"  {...register(\"gender\")} value=\"male\" />\n        <label for=\"male\">Male</label><br />\n        <input type=\"radio\" id=\"female\" {...register(\"gender\")} value=\"female\" />\n        <label for=\"female\">Female</label><br />\n        <input type=\"radio\" id=\"other\" {...register(\"gender\")} value=\"other\" />\n        <label for=\"other\">Other</label>\n\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Phone Number</Form.Label>\n          <Form.Control type=\"number\" {...register(\"phoneNumber\")}  />\n          <p style={{ color: 'red' }}>{errors.phoneNumber?.message}</p>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"password\" {...register(\"password\")}  />\n          <p style={{ color: 'red' }}>{errors.password?.message}</p>\n        </Form.Group>\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control type=\"password\" {...register(\"confirmPassword\")}  />\n          <p style={{ color: 'red' }}>{errors.confirmPassword?.message}</p>\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>      \n\n      <div>\n      {(formData!== undefined) ? <h2>Output</h2> : null}\n        {(formData !== undefined) ? Object.keys(formData).map((value) => (\n          <div>\n            <div style={{ textAlign: 'center' }}> \n              <p style={{ display: 'inline-block' }}>{value} : </p>\n              <span style={{ display: 'inline-block' }}> {formData[value]}</span>\n            </div>\n          </div>\n        )) : null}\n      </div>\n    </div>\n  )\n}\n\nexport default Register;","import React, { useState, useEffect } from 'react';\nimport { Table, Button } from 'react-bootstrap';\n\nconst Users = () => {\n  const [users, setUsers] = useState(undefined);\n  const [formData, setFormData] = useState(undefined);\n\n  const handleForm = (e) => {\n    let value = e.target.value;\n    let name = e.target.name;\n\n    setFormData({\n      ...formData,\n      [name]: value,\n\n    })\n  }\n\n  console.log(users);\n\n  const handleUsers = () => {\n    if (formData !== undefined) {\n      let res = Object.getOwnPropertyNames(formData);\n      if (res.length === 5 ) {\n        if (users === undefined) {\n          setUsers([{...formData, id: Math.random()}]);\n        } else {\n          setUsers([ ...users, {...formData, id: Math.random()} ]);\n        }\n      }\n    }\n  }\n\n  const handleDeleteUsers = (data) => {\n    setUsers((prevState) => {\n      const fil = prevState.filter((value) => {\n        return value.id !== data ;\n      });\n      return fil;\n    })\n\n  }\n\n  const handleEditUsers = (data) => {\n    setUsers((prevState) => {\n      let res = prevState.filter((val) => {\n        return val.id === data;\n      })\n      let res2 = prevState.filter((val) => {\n        return val.id !== data;\n      })\n\n      return [ ...res2, { ...res[0], edit: true } ]\n    })\n  }\n\n  const handleInsaneEdit = (id) => {\n    setUsers((prevState) => {\n      let res = prevState.filter((val) => {\n        return val.id === id;\n      })\n      let res2 = prevState.filter((val) => {\n        return val.id !== id;\n      })\n\n      return [ ...res2, { ...formData } ]\n    });\n  }\n\n  return (\n    <div style={{ marginTop: '50px' }}>\n      <h1>Users</h1>\n      <Table>\n        <thead>\n        <tr>\n          <th>Name</th>\n          <th>Gender</th>\n          <th>Phone Number</th>\n          <th>Qualification</th>\n          <th>Email</th>\n        </tr>\n        </thead>\n        <tbody>\n          \n          {users?.map((value) => (\n            (!value.hasOwnProperty('edit')) ? (\n            <tr >\n            <td>{value.name}</td>\n            <td>{value.gender}</td>\n            <td>{value.phone}</td>\n            <td>{value.qualification}</td>\n            <td>{value.email}</td>\n            <td><Button variant=\"danger\" onClick={() => handleDeleteUsers(value.id)}>Delete</Button></td>\n            <td ><Button variant=\"light\" onClick={() => handleEditUsers(value.id)}>Edit</Button></td>\n            </tr>\n            ) : (\n            <tr>\n            <td><input type=\"text\" defaultValue={value.name} name='name' placeholder=\"name\" onChange={handleForm} /></td>\n            <td><input type=\"text\" defaultValue={value.gender} name='gender' placeholder=\"gender\" onChange={handleForm}/></td>\n            <td><input type=\"number\" defaultValue={value.phone} name='phone' placeholder=\"phone\" onChange={handleForm}/></td>\n            <td><input type=\"text\" defaultValue={value.qualification} name='qualification' placeholder=\"qualification\" onChange={handleForm}/></td>\n            <td><input type=\"email\" defaultValue={value.email} name='email' placeholder=\"Email\" onChange={handleForm}/></td>\n            <td><Button variant=\"success\" onClick={() => handleInsaneEdit(value.id)}>Done</Button></td>\n            </tr>\n            )\n          ))}\n        </tbody>\n        <span>Add user below</span>\n        <tbody>\n          <tr>\n            <td><input type=\"text\" name='name' placeholder=\"name\" onChange={handleForm} /></td>\n            <td><input type=\"text\" name='gender' placeholder=\"gender\" onChange={handleForm}/></td>\n            <td><input type=\"number\" name='phone' placeholder=\"phone\" onChange={handleForm}/></td>\n            <td><input type=\"text\" name='qualification' placeholder=\"qualification\" onChange={handleForm}/></td>\n            <td><input type=\"email\" name='email' placeholder=\"Email\" onChange={handleForm}/></td>\n          </tr>\n          <Button onClick={handleUsers}>Add</Button>\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nexport default Users;","import React, { useState } from 'react';\nimport { Button, Container } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Register from './components/register';\nimport Users from './components/users';\n\nfunction App() {\n  const [ conditionalRender, setConditionalRender ] = useState(undefined);\n\n  return (\n    <div>\n      <Container>\n        <h2>My Assignment</h2>\n        <p>Click on the button to view the particular assignment.</p>\n        <Button onClick={() => setConditionalRender(\"register\")}>\n          Assignment 1 Register\n        </Button>\n        <Button onClick={() => setConditionalRender(\"users\")} style={{ marginLeft: '30px' }}>\n          Assignment 2 Users\n        </Button>\n\n        {(conditionalRender === \"register\") ? <Register /> : (conditionalRender === \"users\") ? <Users /> : null}\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}